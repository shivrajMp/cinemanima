{"version":3,"file":"static/js/467.6ba6890a.chunk.js","mappings":"oKAGA,MAAMA,EAA2BC,EAAAA,MAAW,IAC1C,wCAEIC,EAAwBD,EAAAA,MAAW,IACvC,yCAuDF,QArDA,WACE,MAAOE,EAAYC,IAAiBC,EAAAA,EAAAA,WAAS,GAqB7C,OAXAC,EAAAA,EAAAA,YAAU,KACR,MAAMC,EAAYC,OAAOC,aAAeC,SAASC,gBAAgBJ,UAC3DK,EAAeF,SAASC,gBAAgBC,aACzBF,SAASC,gBAAgBE,YAEW,GAKxD,KAEDC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACC,EAAAA,GAAM,CAAAF,UACLC,EAAAA,EAAAA,KAACE,EAAAA,SAAQ,CAACC,UAAUH,EAAAA,EAAAA,KAAA,OAAAD,SAAK,eAAiBA,UACxCF,EAAAA,EAAAA,MAACO,EAAAA,GAAM,CAAAL,SAAA,EACLC,EAAAA,EAAAA,KAACK,EAAAA,GAAK,CAACC,KAAK,SAASC,SAASP,EAAAA,EAAAA,KAACf,EAAqB,OACpDe,EAAAA,EAAAA,KAACK,EAAAA,GAAK,CACJC,KAAK,6BACLC,SAASP,EAAAA,EAAAA,KAACjB,EAAwB,OAGpCiB,EAAAA,EAAAA,KAACK,EAAAA,GAAK,CACJC,KAAK,IACLC,SACEP,EAAAA,EAAAA,KAACQ,EAAAA,GAAQ,CACPC,GAAG,SACHC,SAAO,OAIbV,EAAAA,EAAAA,KAACK,EAAAA,GAAK,CAACC,KAAK,oBAAoBC,SAASP,EAAAA,EAAAA,KAACW,EAAAA,EAAS,cAIzDd,EAAAA,EAAAA,MAAA,UAAQe,UAAU,gBAAgBC,QA3ClBC,KACd5B,EACFK,OAAOwB,SAAS,CAAEC,IAAK,EAAGC,SAAU,WAEpC1B,OAAOwB,SAAS,CAAEC,IAAKvB,SAASyB,KAAKvB,aAAcsB,SAAU,WAE/D9B,GAAeD,EAAW,EAqC+Ba,SAAA,CACpDb,EAAa,SAAM,SAAI,SAIhC,C","sources":["component/animehome/animehome.jsx"],"sourcesContent":["import React, { Suspense, useEffect, useState } from \"react\";\r\nimport { Navigate, Route, Router, Routes } from \"react-router-dom\";\r\nimport ErrorPage from \"../error-page/errorpage\";\r\nconst MyLazyLoadedAnimeDetails = React.lazy(() =>\r\n  import(\"../animedetails/animedetails\")\r\n);\r\nconst MyLazyLoadedDashboard = React.lazy(() =>\r\n  import(\"../dashboard/dashboard\")\r\n);\r\nfunction AnimeHome() {\r\n  const [isAtBottom, setIsAtBottom] = useState(false);\r\n\r\n  const handleClick = () => {\r\n    if (isAtBottom) {\r\n      window.scrollTo({ top: 0, behavior: \"smooth\" });\r\n    } else {\r\n      window.scrollTo({ top: document.body.scrollHeight, behavior: \"smooth\" });\r\n    }\r\n    setIsAtBottom(!isAtBottom);\r\n  };\r\n  useEffect(() => {\r\n    const scrollTop = window.pageYOffset || document.documentElement.scrollTop;\r\n    const scrollHeight = document.documentElement.scrollHeight;\r\n    const clientHeight = document.documentElement.clientHeight;\r\n\r\n    const isBottom = scrollTop + clientHeight >= scrollHeight;\r\n    // if (isBottom)\r\n    // setIsAtBottom(isBottom)\r\n    //  else if(scrollTop <= 0)\r\n    //  setIsAtBottom(scrollTop <= 0)\r\n  }, []);\r\n  return (\r\n    <>\r\n      <Router>\r\n        <Suspense fallback={<div>Loading...</div>}>\r\n          <Routes>\r\n            <Route path=\"/anime\" element={<MyLazyLoadedDashboard />} />\r\n            <Route\r\n              path=\"/anime/:animeName/:animeId\"\r\n              element={<MyLazyLoadedAnimeDetails />}\r\n            />\r\n            {/* Redirect any unmatched paths to the home page */}\r\n            <Route\r\n              path=\"*\"\r\n              element={\r\n                <Navigate\r\n                  to=\"/anime\"\r\n                  replace // Use replace to avoid adding a new entry to the history stack\r\n                />\r\n              }\r\n            />\r\n            <Route path=\"/anime/error-page\" element={<ErrorPage />} />\r\n          </Routes>\r\n        </Suspense>\r\n      </Router>\r\n      <button className=\"floating-icon\" onClick={handleClick}>\r\n        {isAtBottom ? \"▲\" : \"▼\"} {/* Change icon based on state */}\r\n      </button>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AnimeHome;\r\n"],"names":["MyLazyLoadedAnimeDetails","React","MyLazyLoadedDashboard","isAtBottom","setIsAtBottom","useState","useEffect","scrollTop","window","pageYOffset","document","documentElement","scrollHeight","clientHeight","_jsxs","_Fragment","children","_jsx","Router","Suspense","fallback","Routes","Route","path","element","Navigate","to","replace","ErrorPage","className","onClick","handleClick","scrollTo","top","behavior","body"],"sourceRoot":""}